/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ynab.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * ScheduledTransactionSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-25T01:42:20.552-05:00")
public class ScheduledTransactionSummary {
  @SerializedName("id")
  private String id = null;

  @SerializedName("date_first")
  private LocalDate dateFirst = null;

  @SerializedName("date_next")
  private LocalDate dateNext = null;

  /**
   * Gets or Sets frequency
   */
  @JsonAdapter(FrequencyEnum.Adapter.class)
  public enum FrequencyEnum {
    NEVER("never"),
    
    DAILY("daily"),
    
    WEEKLY("weekly"),
    
    EVERYOTHERWEEK("everyOtherWeek"),
    
    TWICEAMONTH("twiceAMonth"),
    
    EVERY4WEEKS("every4Weeks"),
    
    MONTHLY("monthly"),
    
    EVERYOTHERMONTH("everyOtherMonth"),
    
    EVERY3MONTHS("every3Months"),
    
    EVERY4MONTHS("every4Months"),
    
    TWICEAYEAR("twiceAYear"),
    
    YEARLY("yearly"),
    
    EVERYOTHERYEAR("everyOtherYear");

    private String value;

    FrequencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FrequencyEnum fromValue(String text) {
      for (FrequencyEnum b : FrequencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FrequencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FrequencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FrequencyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FrequencyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("frequency")
  private FrequencyEnum frequency = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  public ScheduledTransactionSummary id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ScheduledTransactionSummary dateFirst(LocalDate dateFirst) {
    this.dateFirst = dateFirst;
    return this;
  }

   /**
   * The first date for which the Scheduled Transaction was scheduled.
   * @return dateFirst
  **/
  @ApiModelProperty(required = true, value = "The first date for which the Scheduled Transaction was scheduled.")
  public LocalDate getDateFirst() {
    return dateFirst;
  }

  public void setDateFirst(LocalDate dateFirst) {
    this.dateFirst = dateFirst;
  }

  public ScheduledTransactionSummary dateNext(LocalDate dateNext) {
    this.dateNext = dateNext;
    return this;
  }

   /**
   * The next date for which the Scheduled Transaction is scheduled.
   * @return dateNext
  **/
  @ApiModelProperty(required = true, value = "The next date for which the Scheduled Transaction is scheduled.")
  public LocalDate getDateNext() {
    return dateNext;
  }

  public void setDateNext(LocalDate dateNext) {
    this.dateNext = dateNext;
  }

  public ScheduledTransactionSummary frequency(FrequencyEnum frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @ApiModelProperty(required = true, value = "")
  public FrequencyEnum getFrequency() {
    return frequency;
  }

  public void setFrequency(FrequencyEnum frequency) {
    this.frequency = frequency;
  }

  public ScheduledTransactionSummary amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The scheduled transaction amount in milliunits format
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "The scheduled transaction amount in milliunits format")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public ScheduledTransactionSummary accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public ScheduledTransactionSummary deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Whether or not the scheduled transaction has been deleted.  Deleted scheduled transactions will only be included in delta requests.
   * @return deleted
  **/
  @ApiModelProperty(required = true, value = "Whether or not the scheduled transaction has been deleted.  Deleted scheduled transactions will only be included in delta requests.")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduledTransactionSummary scheduledTransactionSummary = (ScheduledTransactionSummary) o;
    return Objects.equals(this.id, scheduledTransactionSummary.id) &&
        Objects.equals(this.dateFirst, scheduledTransactionSummary.dateFirst) &&
        Objects.equals(this.dateNext, scheduledTransactionSummary.dateNext) &&
        Objects.equals(this.frequency, scheduledTransactionSummary.frequency) &&
        Objects.equals(this.amount, scheduledTransactionSummary.amount) &&
        Objects.equals(this.accountId, scheduledTransactionSummary.accountId) &&
        Objects.equals(this.deleted, scheduledTransactionSummary.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dateFirst, dateNext, frequency, amount, accountId, deleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduledTransactionSummary {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dateFirst: ").append(toIndentedString(dateFirst)).append("\n");
    sb.append("    dateNext: ").append(toIndentedString(dateNext)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

